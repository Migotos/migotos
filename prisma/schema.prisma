generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cat {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  stamnavn    String     @db.VarChar(255)
  pedigreeurl String?    @db.VarChar(255)
  description String?    @db.VarChar(500)
  birth       String     @db.VarChar(255)
  gender      String     @db.VarChar(255)
  fertile     Boolean
  father      String     @db.VarChar(255)
  mother      String     @db.VarChar(255)
  breeder     String     @db.VarChar(255)
  owner       String     @db.VarChar(255)
  slug        String     @db.VarChar(255)
  nickname    String?    @db.VarChar(50)
  CatImage    CatImage[]
}

model CatImage {
  id      Int    @id @default(autoincrement())
  cat_id  Int
  src     String @db.VarChar(255)
  width   Int
  height  Int
  blururl String @db.VarChar(255)
  Cat     Cat    @relation(fields: [cat_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "CatImage_ibfk_1")

  @@index([cat_id], map: "cat_id")
}

model Kitten {
  id        Int     @id @default(autoincrement())
  litter_id Int
  name      String  @db.VarChar(255)
  stamnavn  String  @db.VarChar(255)
  gender    String  @db.VarChar(255)
  info      String? @db.VarChar(255)
  Litter    Litter  @relation(fields: [litter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Kitten_ibfk_1")


  @@index([litter_id], map: "litter_id")
}

model KittenPictureImage {
  id                  Int               @id @default(autoincrement())
  litter_picture_week Int
  title               String?           @db.VarChar(255)
  src                 String            @db.VarChar(255)
  width               Int
  height              Int
  blururl             String            @db.VarChar(255)
  LitterPictureWeek   LitterPictureWeek @relation(fields: [litter_picture_week], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "KittenPictureImage_ibfk_1")

  @@index([litter_picture_week], map: "litter_picture_week")
}

model Litter {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  pedigreeurl       String?             @db.VarChar(255)
  mother_img        String              @db.VarChar(255)
  father_img        String              @db.VarChar(255)
  mother_name       String              @db.VarChar(255)
  father_name       String              @db.VarChar(255)
  mother_stamnavn   String              @db.VarChar(255)
  father_stamnavn   String              @db.VarChar(255)
  description       String?             @db.VarChar(2000)
  slug              String?             @db.VarChar(255)
  post_image        String?             @db.VarChar(255)
  born              DateTime            @db.Date
  LitterPictureWeek LitterPictureWeek[]
  Tag               Tag[]
  Kitten            Kitten[]
}

model LitterPictureWeek {
  id                 Int                  @id @default(autoincrement())
  litter_id          Int
  name               String               @db.VarChar(255)
  link               String               @db.VarChar(255)
  KittenPictureImage KittenPictureImage[]
  Litter             Litter               @relation(fields: [litter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "LitterPictureWeek_ibfk_1")

  @@index([litter_id], map: "litter_id")
}

model Tag {
  id        Int    @id @default(autoincrement())
  value     String @db.VarChar(255)
  litter_id Int
  Litter    Litter @relation(fields: [litter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Tag_ibfk_1")

  @@index([litter_id], map: "litter_id")
}

model BlogPost {
  id        Int                     @id @default(autoincrement())
  title     String                  @db.VarChar(255)
  body      String                  @db.VarChar(255)
  image_url String?                 @db.VarChar(255)
  post_date DateTime                @db.Date
  tags      BlogPostToBlogPostTag[]
}

model BlogPostTag {
  id    Int                     @id @default(autoincrement())
  value String                  @unique @db.VarChar(255)
  posts BlogPostToBlogPostTag[]
}

model BlogPostToBlogPostTag {
  blogpost_id    Int
  blogposttag_id Int
  blogpost       BlogPost    @relation(fields: [blogpost_id], references: [id])
  blogposttag    BlogPostTag @relation(fields: [blogposttag_id], references: [id])

  @@id([blogpost_id, blogposttag_id])
  @@index([blogposttag_id], map: "BlogPostToBlogPostTag_blogposttag_id_fkey")
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(55)
  email     String   @db.VarChar(101)
  message   String   @db.Text
  createdAt DateTime @default(now())
  subject   String   @db.VarChar(255)
}
